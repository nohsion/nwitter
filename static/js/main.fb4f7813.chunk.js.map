{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Nweet","nweetObj","isOwner","userObj","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","id","delete","attachmentUrl","refFromURL","toggleEditing","update","autoFocus","src","userId","fontWeight","faTrash","faPencilAlt","NweetFactory","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","collection","add","createdAt","Date","now","creatorId","displayName","maxLength","htmlFor","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","Boolean","readAsDataURL","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","orderBy","onSnapshot","snapshot","newArray","docs","map","document","data","marginTop","Profile","refreshUser","history","useHistory","newDisplayName","setNewDisplayName","updateProfile","signOut","push","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.fb4f7813.chunk.js","sourcesContent":["import firebase from \"firebase/app\"\r\nimport \"firebase/auth\"\r\nimport \"firebase/firestore\"\r\nimport \"firebase/storage\"\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_APP_ID,\r\n    measurementId: process.env.REACT_APP_MEASUREMENT_ID\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase\r\nexport const authService = firebase.auth()\r\nexport const dbService = firebase.firestore()\r\nexport const storageService = firebase.storage()","import { authService } from \"fbase\";\r\nimport { useState } from \"react\";\r\n\r\nconst AuthForm = () => {\r\n    const [email, setEmail] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n    const [newAccount, setNewAccount] = useState(true)\r\n    const [error, setError] = useState(\"\")\r\n\r\n    const onChange = (event) => {\r\n        const {\r\n            target: { name, value },\r\n        } = event\r\n        if (name === \"email\") {\r\n            setEmail(value)\r\n        }\r\n        else if (name === \"password\") {\r\n            setPassword(value)\r\n        }\r\n    }\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault()\r\n        try {\r\n            let data\r\n            if (newAccount) {\r\n                // create newAccount\r\n                data = await authService.createUserWithEmailAndPassword(email, password)\r\n            }\r\n            else {\r\n                // log in\r\n                data = await authService.signInWithEmailAndPassword(email, password)\r\n            }\r\n        } catch (error) {\r\n            setError(error.message)\r\n        }\r\n    }\r\n\r\n    const toggleAccount = () => setNewAccount((prev) => !prev)\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={onSubmit} className=\"container\">\r\n                <input\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Email\"\r\n                    required\r\n                    value={email}\r\n                    onChange={onChange}\r\n                    className=\"authInput\"\r\n                />\r\n                <input\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    required\r\n                    value={password}\r\n                    onChange={onChange}\r\n                    className=\"authInput\"\r\n                />\r\n                <input\r\n                    type=\"submit\"\r\n                    value={newAccount ? \"Create Account\" : \"Log In\"}\r\n                    className=\"authInput authSubmit\"\r\n                />\r\n                {error && <span className=\"authError\">{error}</span>}\r\n            </form>\r\n            <span onClick={toggleAccount} className=\"authSwitch\">\r\n                {newAccount ? \"Sign in\" : \"Create Account\"}\r\n            </span>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AuthForm","import { authService, firebaseInstance } from \"fbase\"\r\nimport AuthForm from \"components/AuthForm\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport {\r\n    faTwitter,\r\n    faGoogle,\r\n    faGithub\r\n} from \"@fortawesome/free-brands-svg-icons\"\r\n\r\nconst Auth = () => {\r\n    const onSocialClick = async (event) => {\r\n        const {\r\n            target: { name },\r\n        } = event\r\n        let provider\r\n        if (name === \"google\") {\r\n            provider = new firebaseInstance.auth.GoogleAuthProvider()\r\n        }\r\n        else if (name === \"github\") {\r\n            provider = new firebaseInstance.auth.GithubAuthProvider()\r\n        }\r\n        const data = await authService.signInWithPopup(provider)\r\n    }\r\n\r\n    return (\r\n        <div className=\"authContainer\">\r\n            <FontAwesomeIcon\r\n                icon={faTwitter}\r\n                color={\"#04AAFF\"}\r\n                size=\"3x\"\r\n                style={{ marginBottom: 30 }}\r\n            />\r\n            <AuthForm />\r\n            <div className=\"authBtns\">\r\n                <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\r\n                    Continue with Google <FontAwesomeIcon icon={faGoogle} />\r\n                </button>\r\n                <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\r\n                    Continue with Github <FontAwesomeIcon icon={faGithub} />\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Auth","import { dbService, storageService } from \"fbase\"\r\nimport { useState } from \"react\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\"\r\n\r\n\r\nconst Nweet = ({ nweetObj, isOwner, userObj }) => {\r\n    const [editing, setEditing] = useState(false)\r\n    const [newNweet, setNewNweet] = useState(nweetObj.text)\r\n\r\n    const onDeleteClick = async () => {\r\n        const ok = window.confirm(\"삭제하시겠습니까?\")\r\n        if (ok) {\r\n            await dbService.doc(`nweets/${nweetObj.id}`).delete()\r\n            if (nweetObj.attachmentUrl !== \"\")\r\n                await storageService.refFromURL(nweetObj.attachmentUrl).delete()\r\n        }\r\n    }\r\n\r\n    const toggleEditing = () => setEditing((prev) => !prev)\r\n\r\n    const onChange = (event) => {\r\n        const {\r\n            target: { value }\r\n        } = event\r\n        setNewNweet(value)\r\n    }\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault()\r\n        await dbService.doc(`nweets/${nweetObj.id}`).update({ text: newNweet })\r\n        setEditing(false)\r\n    }\r\n\r\n    return (\r\n        <div className=\"nweet\">\r\n            {editing ? (\r\n                <>\r\n                    <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n                        <input\r\n                            onChange={onChange}\r\n                            value={newNweet}\r\n                            required\r\n                            placeholder=\"Edit your nweet\"\r\n                            autoFocus\r\n                            className=\"formInput\"\r\n                        />\r\n                        <input type=\"submit\" value=\"Save\" className=\"formBtn\" />\r\n                    </form>\r\n                    <button onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n                        Cancel\r\n                    </button>\r\n                </>\r\n            ) : (\r\n                <>\r\n                    <h4>{nweetObj.text}</h4>\r\n                    {nweetObj.attachmentUrl && (\r\n                        <img src={nweetObj.attachmentUrl} />\r\n                    )}\r\n                    <br></br>\r\n                    {nweetObj.userId && (\r\n                        <span style={{fontWeight: 600}}>{nweetObj.userId}</span>\r\n                    )}\r\n                    {isOwner && (\r\n                        <div className=\"nweet__actions\">\r\n                            <span onClick={onDeleteClick}>\r\n                                <FontAwesomeIcon icon={faTrash} />\r\n                            </span>\r\n                            <span onClick={toggleEditing}>\r\n                                <FontAwesomeIcon icon={faPencilAlt} />\r\n                            </span>\r\n                        </div>\r\n                    )}\r\n                </>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Nweet","import { useState } from \"react\"\r\nimport { dbService, storageService } from \"fbase\"\r\nimport { v4 as uuidv4 } from \"uuid\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\"\r\n\r\nconst NweetFactory = ({ userObj }) => {\r\n    const [nweet, setNweet] = useState(\"\")\r\n    const [attachment, setAttachment] = useState(\"\")\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault()\r\n        if (nweet === \"\") {\r\n            return\r\n        }\r\n        let attachmentUrl = \"\"\r\n        if (attachment !== \"\") {\r\n            const attachmentRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`)\r\n            const response = await attachmentRef.putString(attachment, \"data_url\")\r\n            attachmentUrl = await response.ref.getDownloadURL()\r\n        }\r\n\r\n        await dbService.collection(\"nweets\").add({\r\n            text: nweet,\r\n            createdAt: Date.now(),\r\n            creatorId: userObj.uid,\r\n            attachmentUrl,\r\n            userId: userObj.displayName\r\n        })\r\n        setNweet(\"\")\r\n        setAttachment(\"\")\r\n    }\r\n\r\n    const onChange = (event) => {\r\n        event.preventDefault()\r\n        const {\r\n            target: { value },\r\n        } = event\r\n        setNweet(value)\r\n    }\r\n\r\n    const onFileChange = (event) => {\r\n        const {\r\n            target: { files }\r\n        } = event\r\n        const theFile = files[0]\r\n        const reader = new FileReader()\r\n        reader.onloadend = (finishedEvent) => {\r\n            const {\r\n                currentTarget: { result }\r\n            } = finishedEvent\r\n            setAttachment(result)\r\n        }\r\n        if (Boolean(theFile)) {\r\n            reader.readAsDataURL(theFile)\r\n        }\r\n    }\r\n\r\n    const onClearAttachment = () => setAttachment(\"\")\r\n\r\n    return (\r\n        <form onSubmit={onSubmit} className=\"factoryForm\">\r\n            <div className=\"factoryInput__container\">\r\n                <input\r\n                    className=\"factoryInput__input\"\r\n                    value={nweet}\r\n                    onChange={onChange}\r\n                    type=\"text\"\r\n                    placeholder=\"What's on your mind?\"\r\n                    maxLength={120}\r\n                />\r\n                <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n            </div>\r\n            <label htmlFor=\"attach-file\" className=\"factoryInput__label\">\r\n                <span>Add Photos</span>\r\n                <FontAwesomeIcon icon={faPlus} />\r\n            </label>\r\n            <input\r\n                id=\"attach-file\"\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                onChange={onFileChange}\r\n                style={{\r\n                    opacity: 0,\r\n                }}\r\n            />\r\n            {attachment && (\r\n                <div className=\"factoryForm__attachment\">\r\n                    <img\r\n                        src={attachment}\r\n                        style={{\r\n                            backgroundImage: attachment,\r\n                        }}\r\n                    />\r\n                    <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n                        <span>Remove</span>\r\n                        <FontAwesomeIcon icon={faTimes} />\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default NweetFactory","import { useEffect, useState } from \"react\"\r\nimport { dbService } from \"fbase\"\r\nimport Nweet from \"components/Nweet\"\r\nimport NweetFactory from \"components/NweetFactory\"\r\n\r\n\r\nconst Home = ({ userObj }) => {\r\n    const [nweets, setNweets] = useState([])\r\n\r\n    useEffect(() => {\r\n        dbService.collection(\"nweets\")\r\n            .orderBy(\"createdAt\", \"desc\")\r\n            .onSnapshot((snapshot) => {\r\n                const newArray = snapshot.docs.map((document) => ({\r\n                    id: document.id,\r\n                    ...document.data(),\r\n                }))\r\n                setNweets(newArray)\r\n            })\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <NweetFactory userObj={userObj} />\r\n            <div style={{ marginTop: 30 }}>\r\n                {nweets.map((nweet) => (\r\n                    <Nweet\r\n                        key={nweet.id}\r\n                        nweetObj={nweet}\r\n                        isOwner={nweet.creatorId === userObj.uid}\r\n                        userObj={userObj}\r\n                    />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home","import { authService } from \"fbase\"\r\nimport { useState } from \"react\"\r\nimport { useHistory } from \"react-router\"\r\n\r\n\r\nconst Profile = ({ userObj, refreshUser }) => {\r\n    const history = useHistory()\r\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName)\r\n\r\n    const onLogOutClick = () => {\r\n        authService.signOut()\r\n        history.push(\"/\")\r\n    }\r\n\r\n    const onChange = (event) => {\r\n        const {\r\n            target: { value }\r\n        } = event\r\n        setNewDisplayName(value)\r\n    }\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault()\r\n        if (userObj.displayName !== newDisplayName) {\r\n            await userObj.updateProfile({ displayName: newDisplayName })\r\n            refreshUser()\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <form onSubmit={onSubmit} className=\"profileForm\">\r\n                <input\r\n                    onChange={onChange}\r\n                    type=\"text\"\r\n                    placeholder=\"Display name\"\r\n                    value={newDisplayName}\r\n                    autoFocus\r\n                    className=\"formInput\"\r\n                />\r\n                <input\r\n                    type=\"submit\"\r\n                    value=\"Update Profile\"\r\n                    className=\"formBtn\"\r\n                    style={{\r\n                        marginTop: 10,\r\n                    }}\r\n                />\r\n            </form>\r\n            <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n                Log Out\r\n            </span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile","import { Link } from \"react-router-dom\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\"\r\nimport { faUser } from \"@fortawesome/free-regular-svg-icons\"\r\n\r\nconst Navigation = ({ userObj }) => {\r\n    return (\r\n        <nav>\r\n            <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\r\n                <li>\r\n                    <Link to=\"/\" style={{ marginRight: 10 }}>\r\n                        <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\r\n                    </Link>\r\n                </li>\r\n                <li>\r\n                    <Link\r\n                        to=\"/profile\"\r\n                        style={{\r\n                            marginLeft: 10,\r\n                            display: \"flex\",\r\n                            flexDirection: \"column\",\r\n                            alignItems: \"center\",\r\n                            fontSize: 12,\r\n                        }}\r\n                    >\r\n                        <FontAwesomeIcon icon={faUser} color={\"04AAFF\"} size=\"2x\" />\r\n                        <span style={{ marginTop: 10 }}>\r\n                            {userObj.displayName\r\n                                ? `${userObj.displayName}의 Profile`\r\n                                : \"Profile\"}\r\n                        </span>\r\n                    </Link>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navigation","import { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Auth from \"routes/Auth\";\r\nimport Home from \"routes/Home\";\r\nimport Profile from \"routes/Profile\";\r\nimport Navigation from \"./Navigation\";\r\n\r\n\r\nconst AppRouter = ({ isLoggedIn, userObj, refreshUser }) => {\r\n\r\n    return (\r\n        <Router>\r\n            {isLoggedIn && <Navigation userObj={userObj} />}\r\n            <Switch>\r\n                {isLoggedIn ? (\r\n                    <div\r\n                        style={{\r\n                            maxWidth: 890,\r\n                            width: \"100%\",\r\n                            margin: \"0 auto\",\r\n                            marginTop: 80,\r\n                            display: \"flex\",\r\n                            justifyContent: \"center\",\r\n                        }}\r\n                    >\r\n                        <Route exact path=\"/\">\r\n                            <Home userObj={userObj} />\r\n                        </Route>\r\n                        <Route exact path=\"/profile\">\r\n                            <Profile userObj={userObj} refreshUser={refreshUser} />\r\n                        </Route>\r\n                    </div>\r\n                ) : (\r\n                    <Route exact path=\"/\">\r\n                        <Auth />\r\n                    </Route>\r\n                )}\r\n            </Switch>\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default AppRouter;","import { useEffect, useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\"\n\nfunction App() {\n  const [init, setInit] = useState(false)\n  const [userObj, setUserObj] = useState(null)\n\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          uid: user.uid,\n          displayName: user.displayName,\n          updateProfile: (args) => user.updateProfile(args),\n        })\n      }\n      else {\n        setUserObj(false)\n      }\n      setInit(true)\n    })\n  }, [])\n\n  const refreshUser = () => {\n    const user = authService.currentUser\n    setUserObj({\n      uid: user.uid,\n      displayName: user.displayName,\n      updateProfile: (args) => user.updateProfile(args),\n    })\n  }\n\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          isLoggedIn={Boolean(userObj)}\n          userObj={userObj}\n          refreshUser={refreshUser}\n        />\n      ) : (\n        \"initializing...\"\n      )}\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\nimport \"./styles.css\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}