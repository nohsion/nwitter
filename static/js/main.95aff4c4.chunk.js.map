{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","id","delete","attachmentUrl","refFromURL","toggleEditing","update","src","width","height","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","collection","add","createdAt","Date","now","creatorId","maxLength","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","newArray","docs","map","document","data","Profile","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","updateProfile","signOut","push","Navigation","console","log","to","AppRouter","isLoggedIn","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","args","Boolean","currentUser","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.95aff4c4.chunk.js","sourcesContent":["import firebase from \"firebase/app\"\r\nimport \"firebase/auth\"\r\nimport \"firebase/firestore\"\r\nimport \"firebase/storage\"\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_APP_ID,\r\n    measurementId: process.env.REACT_APP_MEASUREMENT_ID\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase\r\nexport const authService = firebase.auth()\r\nexport const dbService = firebase.firestore()\r\nexport const storageService = firebase.storage()","import { authService } from \"fbase\";\r\nimport { useState } from \"react\";\r\n\r\nconst AuthForm = () => {\r\n    const [email, setEmail] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n    const [newAccount, setNewAccount] = useState(true)\r\n    const [error, setError] = useState(\"\")\r\n\r\n    const onChange = (event) => {\r\n        const {\r\n            target: { name, value },\r\n        } = event\r\n        if (name === \"email\") {\r\n            setEmail(value)\r\n        }\r\n        else if (name === \"password\") {\r\n            setPassword(value)\r\n        }\r\n    }\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault()\r\n        try {\r\n            let data\r\n            if (newAccount) {\r\n                // create newAccount\r\n                data = await authService.createUserWithEmailAndPassword(email, password)\r\n            }\r\n            else {\r\n                // log in\r\n                data = await authService.signInWithEmailAndPassword(email, password)\r\n            }\r\n        } catch (error) {\r\n            setError(error.message)\r\n        }\r\n    }\r\n\r\n    const toggleAccount = () => setNewAccount((prev) => !prev)\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={onSubmit}>\r\n                <input\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Email\"\r\n                    required\r\n                    value={email}\r\n                    onChange={onChange}\r\n                />\r\n                <input\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    required\r\n                    value={password}\r\n                    onChange={onChange}\r\n                />\r\n                <input type=\"submit\" value={newAccount ? \"Create Account\" : \"Log In\"} />\r\n                {error}\r\n            </form>\r\n            <span onClick={toggleAccount}>\r\n                {newAccount ? \"Sign in\" : \"Create Account\"}\r\n            </span>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AuthForm","import { authService, firebaseInstance } from \"fbase\"\r\nimport AuthForm from \"components/AuthForm\"\r\n\r\nconst Auth = () => {\r\n\r\n    const onSocialClick = async (event) => {\r\n        const {\r\n            target: { name },\r\n        } = event\r\n        let provider\r\n        if (name === \"google\") {\r\n            provider = new firebaseInstance.auth.GoogleAuthProvider()\r\n        }\r\n        else if (name === \"github\") {\r\n            provider = new firebaseInstance.auth.GithubAuthProvider()\r\n        }\r\n        const data = await authService.signInWithPopup(provider)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <AuthForm />\r\n            <div>\r\n                <button onClick={onSocialClick} name=\"google\">\r\n                    Continue with Google\r\n                </button>\r\n                <button onClick={onSocialClick} name=\"github\">\r\n                    Continue with Github\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Auth","import { concatSeries } from \"async\"\r\nimport { dbService, storageService } from \"fbase\"\r\nimport { useState } from \"react\"\r\n\r\n\r\nconst Nweet = ({ nweetObj, isOwner }) => {\r\n    const [editing, setEditing] = useState(false)\r\n    const [newNweet, setNewNweet] = useState(nweetObj.text)\r\n\r\n    const onDeleteClick = async () => {\r\n        const ok = window.confirm(\"삭제하시겠습니까?\")\r\n        if (ok) {\r\n            await dbService.doc(`nweets/${nweetObj.id}`).delete()\r\n            if (nweetObj.attachmentUrl !== \"\")\r\n                await storageService.refFromURL(nweetObj.attachmentUrl).delete()\r\n        }\r\n    }\r\n\r\n    const toggleEditing = () => setEditing((prev) => !prev)\r\n\r\n    const onChange = (event) => {\r\n        const {\r\n            target: { value }\r\n        } = event\r\n        setNewNweet(value)\r\n    }\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault()\r\n        await dbService.doc(`nweets/${nweetObj.id}`).update({ text: newNweet })\r\n        setEditing(false)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {editing ? (\r\n                <>\r\n                    <form onSubmit={onSubmit}>\r\n                        <input onChange={onChange} value={newNweet} required />\r\n                        <input type=\"submit\" value=\"Save\" />\r\n                    </form>\r\n                    <button onClick={toggleEditing}>Cancel</button>\r\n                </>\r\n            ) : (\r\n                <>\r\n                    <h4>{nweetObj.text}</h4>\r\n                    {nweetObj.attachmentUrl && (\r\n                        <img src={nweetObj.attachmentUrl} width=\"50px\" height=\"50px\" />\r\n                    )}\r\n                    {isOwner && (\r\n                        <>\r\n                            <button onClick={onDeleteClick}>Delete Nweet</button>\r\n                            <button onClick={toggleEditing}>Edit Nweet</button>\r\n                        </>\r\n                    )}\r\n                </>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Nweet","import { useState } from \"react\"\r\nimport { dbService, storageService } from \"fbase\"\r\nimport { v4 as uuidv4 } from \"uuid\"\r\n\r\n\r\nconst NweetFactory = ({ userObj }) => {\r\n    const [nweet, setNweet] = useState(\"\")\r\n    const [attachment, setAttachment] = useState(\"\")\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault()\r\n        let attachmentUrl = \"\"\r\n        if (attachment !== \"\") {\r\n            const attachmentRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`)\r\n            const response = await attachmentRef.putString(attachment, \"data_url\")\r\n            attachmentUrl = await response.ref.getDownloadURL()\r\n        }\r\n\r\n        await dbService.collection(\"nweets\").add({\r\n            text: nweet,\r\n            createdAt: Date.now(),\r\n            creatorId: userObj.uid,\r\n            attachmentUrl,\r\n        })\r\n        setNweet(\"\")\r\n        setAttachment(\"\")\r\n    }\r\n\r\n    const onChange = (event) => {\r\n        event.preventDefault()\r\n        const {\r\n            target: { value },\r\n        } = event\r\n        setNweet(value)\r\n    }\r\n\r\n    const onFileChange = (event) => {\r\n        const {\r\n            target: { files }\r\n        } = event\r\n        const theFile = files[0]\r\n        const reader = new FileReader()\r\n        reader.onloadend = (finishedEvent) => {\r\n            const {\r\n                currentTarget: { result }\r\n            } = finishedEvent\r\n            setAttachment(result)\r\n        }\r\n        reader.readAsDataURL(theFile)\r\n    }\r\n\r\n    const onClearAttachment = () => setAttachment(\"\")\r\n\r\n    return (\r\n        <form onSubmit={onSubmit}>\r\n            <input\r\n                value={nweet}\r\n                onChange={onChange}\r\n                type=\"text\"\r\n                placeholder=\"What's on your mind?\"\r\n                maxLength={128}\r\n            />\r\n            <input type=\"file\" accept=\"image/*\" onChange={onFileChange} />\r\n            <input type=\"submit\" value=\"Nweet\" />\r\n            {attachment && (\r\n                <div>\r\n                    <img src={attachment} width=\"50px\" height=\"50px\" />\r\n                    <button onClick={onClearAttachment}>Clear</button>\r\n                </div>\r\n            )}\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default NweetFactory","import { useEffect, useState } from \"react\"\r\nimport { dbService } from \"fbase\"\r\nimport Nweet from \"components/Nweet\"\r\nimport NweetFactory from \"components/NweetFactory\"\r\n\r\n\r\nconst Home = ({ userObj }) => {\r\n    const [nweets, setNweets] = useState([])\r\n    \r\n    useEffect(() => {\r\n        dbService.collection(\"nweets\").onSnapshot((snapshot) => {\r\n            const newArray = snapshot.docs.map((document) => ({\r\n                id: document.id,\r\n                ...document.data(),\r\n            }))\r\n            setNweets(newArray)\r\n        })\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <>\r\n            <NweetFactory userObj={userObj} />\r\n            <div>\r\n                {nweets.map((nweet) => (\r\n                    <Nweet\r\n                        key={nweet.id}\r\n                        nweetObj={nweet}\r\n                        isOwner={nweet.creatorId === userObj.uid}\r\n                    />\r\n                ))}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Home","import { authService, dbService } from \"fbase\"\r\nimport { useState, useEffect } from \"react\"\r\nimport { useHistory } from \"react-router\"\r\n\r\n\r\nconst Profile = ({ userObj, refreshUser }) => {\r\n    const history = useHistory()\r\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName)\r\n\r\n    const onLogOutClick = () => {\r\n        authService.signOut()\r\n        history.push(\"/\")\r\n    }\r\n\r\n    const onChange = (event) => {\r\n        const {\r\n            target: { value }\r\n        } = event\r\n        setNewDisplayName(value)\r\n    }\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault()\r\n        if (userObj.displayName !== newDisplayName) {\r\n            await userObj.updateProfile({ displayName: newDisplayName })\r\n            refreshUser()\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={onSubmit}>\r\n                <input\r\n                    onChange={onChange}\r\n                    type=\"text\"\r\n                    placeholder=\"Display name\"\r\n                    value={newDisplayName}\r\n                />\r\n                <input type=\"submit\" value=\"Update Profile\" />\r\n            </form>\r\n            <button onClick={onLogOutClick}>Log Out</button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Profile","import { Link } from \"react-router-dom\"\r\n\r\n\r\nconst Navigation = ({ userObj }) => {\r\n    console.log(userObj.displayName)\r\n    return (\r\n        <nav>\r\n            <ul>\r\n                <li>\r\n                    <Link to=\"/\">Home</Link>\r\n                </li>\r\n                <li>\r\n                    <Link to=\"/profile\">{userObj.displayName}의 Profile</Link>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navigation","import { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Auth from \"routes/Auth\";\r\nimport Home from \"routes/Home\";\r\nimport Profile from \"routes/Profile\";\r\nimport Navigation from \"./Navigation\";\r\n\r\n\r\nconst AppRouter = ({ isLoggedIn, userObj, refreshUser }) => {\r\n\r\n    return (\r\n        <Router>\r\n            {isLoggedIn && <Navigation userObj={userObj} />}\r\n            <Switch>\r\n                {isLoggedIn ? (\r\n                    <>\r\n                        <Route exact path=\"/\">\r\n                            <Home userObj={userObj} />\r\n                        </Route>\r\n                        <Route exact path=\"/profile\">\r\n                            <Profile userObj={userObj} refreshUser={refreshUser} />\r\n                        </Route>\r\n                    </>\r\n                ) : (\r\n                    <Route exact path=\"/\">\r\n                        <Auth />\r\n                    </Route>\r\n                )}\r\n            </Switch>\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default AppRouter;","import { useEffect, useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\"\n\nfunction App() {\n  const [init, setInit] = useState(false)\n  const [userObj, setUserObj] = useState(null)\n\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          uid: user.uid,\n          displayName: user.displayName,\n          updateProfile: (args) => user.updateProfile(args),\n        })\n      }\n      else {\n        setUserObj(false)\n      }\n      setInit(true)\n    })\n  }, [])\n\n  const refreshUser = () => {\n    const user = authService.currentUser\n    setUserObj({\n      uid: user.uid,\n      displayName: user.displayName,\n      updateProfile: (args) => user.updateProfile(args),\n    })\n  }\n\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          isLoggedIn={Boolean(userObj)}\n          userObj={userObj}\n          refreshUser={refreshUser}\n        />\n      ) : (\n        \"initializing...\"\n      )}\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}